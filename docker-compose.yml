services:
  db:
    image: postgres:17
    container_name: walletdb
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
                -c shared_buffers=256MB
                -c effective_cache_size=768MB
                -c maintenance_work_mem=64MB
                -c checkpoint_completion_target=0.7
                -c wal_buffers=16MB
                -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  web:
    build: .
    container_name: wallet_web
    command: sh -c "./wait-for-it.sh db:5432 -- python manage.py migrate && gunicorn --bind 0.0.0.0:8000 --workers 1 --threads 4 wallet_project.wsgi:application"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}

  locust:
    build:
      context: .
      dockerfile: Dockerfile.locust
    container_name: wallet_locust
    ports:
      - "8089:8089"
    depends_on:
      - web
      - db
    command: locust -f locustfile.py --host http://web:8000
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}